AWSTemplateFormatVersion: '2010-09-09'

Description: ECS Cluster Application Release

Parameters:
  Name:
    Type: String
    Description: Name of this Application
    ConstraintDescription: Must be DNS friendly
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9\-]+$
  ClusterName:
    Type: String
    Description: Name of the ECS cluster to use
    ConstraintDescription: Must be DNS friendly
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9\-]+$
  ContainerPort:
    Description: Port container listens
    Type: String
  RulePriority:
    Description: Listerner Rule Priority
    Type: Number
  HealthCheckPath:
    Description: Healthcheck Path used on TargetGroup
    Type: String
    Default: /
  HealthCheckGracePeriod:
    Description: The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.
    Type: Number
    Default: 60
  HealthCheckTimeout:
    Description: The amount of time, in seconds, during which no response means a failed health check (2-120 seconds).
    Type: Number
    Default: 5
  HealthCheckInterval:
    Description: The approximate amount of time between health checks of an individual target (5-300 seconds).
    Type: Number
    Default: 10
  DeregistrationDelay:
    Description: Target Group Deregistration Delay timeout in seconds
    Type: Number
    Default: 30
  Autoscaling:
    Description: Enable Autoscaling
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  AutoscalingTargetValue:
    Description: Target CPU for Autoscaling
    Type: Number
    Default: 75
  AutoscalingMaxSize:
    Description: Max number of containers to autoscale
    Type: Number
    Default: 16
  AutoscalingMinSize:
    Description: Min number of containers to autoscale
    Type: Number
    Default: 2
  HostedZoneName:
    Type: String
    Description: Hosted Zone name for domain record created for this app
  Hostname:
    Type: String
  HostnameBlue:
    Type: String
  HostnameCreate:
    Type: String
    Default: "true"
  PathPattern:
    Type: String
    Default: "/*"
  Image:
    Description: Image for initial task definition placeholder
    Type: String
    Default: dnxsolutions/nginx-hello:latest

Conditions:
  isHostnameCreate: !Equals [ !Ref HostnameCreate, 'true' ]
  isAutoscaling: !Equals [ !Ref Autoscaling, 'true' ]

Resources:
  AlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: !Ref HealthCheckInterval
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: !Ref HealthCheckTimeout
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: !Ref DeregistrationDelay
      VpcId:
        Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-VpcId"

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn:
            Ref: AlbTargetGroup
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !Ref Hostname
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Ref Path
      ListenerArn: 
        Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-AlbListenerHttpsArn"
      Priority: !Ref RulePriority

  TaskDefinition: 
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        - Name: !Ref Name
          Image: !Ref Image
          PortMappings: 
            - ContainerPort: !Ref ContainerPort
          Memory: "128"
          Essential: true

  EcsService:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: !Ref Name
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      PlacementStrategies:
        - Type: spread
          Field: attribute:ecs.availability-zone
        - Type: binpack
          Field: memory
      HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriod
      Cluster: 
        Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-EcsName"
      Role: 
        Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-EcsServiceIamRoleArn"
      LoadBalancers:
        - ContainerName: !Sub "${Name}"
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref AlbTargetGroup

  ServiceScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: isAutoscaling
    Properties:
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      MaxCapacity: !Ref AutoscalingMaxSize
      MinCapacity: !Ref AutoscalingMinSize
      ResourceId: !Sub
        - "service/${ECSCluster}/${ServiceName}"
        - ECSCluster: 
            Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-EcsName"
          ServiceName: !GetAtt EcsService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ServiceScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: isAutoscaling
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-target'
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref 'ServiceScalingTarget'
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: !Ref AutoscalingTargetValue
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization

  Route53Hostname:
    Type: AWS::Route53::RecordSet
    Condition: isHostnameCreate
    Properties:
      Name: !Ref Hostname
      HostedZoneName: !Ref HostedZoneName
      Type: A
      AliasTarget:
        HostedZoneId: 
          Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-AlbZoneId"
        DNSName: 
          Fn::ImportValue: !Sub "TfExport-Ecs-${ClusterName}-AlbDnsName"

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub "${ClusterName}-${Name}"
      ComputePlatform: ECS
